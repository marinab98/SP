
//Napisati program koji prvo pro훾ita koliko redaka ima datoteka, tj. koliko ima studenata
//zapisanih u datoteci. Nakon toga potrebno je dinami훾ki alocirati prostor za niz struktura
//studenata (ime, prezime, bodovi) i u훾itati iz datoteke sve zapise. Na ekran ispisati ime,
//prezime,apsolutni i relativni broj bodova.
//Napomena: Svaki redak datoteke sadr탑i ime i prezime studenta, te broj bodova na kolokviju.
//relativan_br_bodova = br_bodova/max_br_bodova*100

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAX_SIZE 1024
#define ok (0)
#define ERROR (-1)
#define prazanpopis (-3)
struct studenti
{   //char = niz slova/znakova = ime
	char ime[128];
	char prezime[128];
	int bodovi;
};
//funkcije
int brojstudenata( char*);
int alociraj(char*,int);
int ucitaj(struct studenti*, FILE*);
int ispis(struct studenti*);
int main()
{
    int y;
	int broj, succ;
	char* imeDatoteke = NULL;

	imeDatoteke = (char*)malloc(1024 * sizeof(char));
	if (imeDatoteke == NULL)
	{
		printf("greska");
		return ERROR;
	}
	printf("Unesite naziv datoteke");
	scanf("%s", imeDatoteke);

	if (strlen(imeDatoteke) == NULL)
	{
		printf("Datoteka je prazan string");
		return PRAZNO;
	}
	strcat(imeDatoteke, ".txt");

	broj = brojstudenata(imeDatoteke);
	if (broj == -3) {
	printf("Datoteka nije otvorena");
	return prazanpopis;
	}
	else
		printf("Studenata je %d\n", broj);

	succ = alociraj(imeDatoteke, broj);
	if (succ == -1)
		printf("Greska");
	else if (succ == -3)
		printf("Datoteka nije otvorena");

	system("pause");
	return 0;



}

int brojstudenata(char *fileName)
{
    FILE *fp;
    int br=0
    fp = fopen(fileName, "r");
    if (fp == NULL)
	{
		return prazanpopis;
	}
    while (!feof(fp))
	{
		fgets(line, MAX_SIZE, fp);
		if (strlen(line) == 0)
			continue;
		br++;

	}
	fclose(fp);
	return br;

}
int ucitaj(struct studenti* st,FILE* fp)
{
	fscanf(fp, " %d %s %s ", &st->bodovi, st->ime, st->prezime);
	return ok;
}
int ispis(struct studenti* st)
{
	printf("%s %s %d %.2f \n", st->ime, st->prezime, st->bodovi, (float)(st->bodovi / 50.0) * 100.0 );
	return ok;
}
int alociraj(char* fileName,int brojstudenata)
{
    int i;
	struct studenti* stud;
	FILE* fp = NULL;

	fp = fopen(fileName, "r");
	if (fp == NULL)
		return prazanpopis;

	stud = (struct studenti*)malloc(brojstudenata * sizeof(struct studenti));
	if (stud == NULL) {
		return ERROR;
	}
	for(i=0;i<brojstudenata;i++)
	{
		ucitaj(stud + i,fp);
	}
	for (i = 0; i < brojstudenata; i++)
		ispis(stud + i);
	fclose(fp);
	return ok;



}

